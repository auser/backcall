= Backcall
  Ari Lerner
  CitrusByte
  http://blog.citrusbyte.com

== DESCRIPTION:
  
  * Backcall, Ari Lerner, Citrusbyte (http://blog.citrusbyte.com) - Simply add super lightweight, memory-efficient before and after callbacks.

== Basics

  Simply require backcall
    require 'backcall'
  
  And include callbacks in your classes
    include Backcall::Callbacks in your class
    
  Then you can call before or after on any method, for instance:
  
  class TestCallbacks  
    before :world, :hello
    after :world, :thanks
    def hello(caller)
      string << "hello "
    end
    def world
      string << "world"
    end
    def thanks(caller)
      string << ", thank you"
    end
  end
  
  TestCallbacks.new.world 
  => "hello world, thank you"
  
  You can write callbacks currently in the following forms:
  
  * before :world, :hello, :hi, :you
  * before :world do 
      puts "hello "
    end
  * before :world, {:hello => "OutsideClass"}
  * before :world, {:hello => OutsideClass}
  
  Note on the last two:
  If you call the last style with a string, it expects the OutsideClass 
  If you call the last one, your class with create a method that calls new on the class that you send to it, It will keep 

== INSTALL:

  gem install backcall

== LICENSE:

(The MIT License)

Copyright (c) 2008 Ari Lerner. CitrusByte

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
